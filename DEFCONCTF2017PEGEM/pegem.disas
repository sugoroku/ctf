
pegem:     file format elf64-x86-64


Disassembly of section .init:

0000000000000700 <_init>:
 700:	48 83 ec 08          	sub    rsp,0x8
 704:	48 8b 05 c5 08 20 00 	mov    rax,QWORD PTR [rip+0x2008c5]        # 200fd0 <_GLOBAL_OFFSET_TABLE_+0x50>
 70b:	48 85 c0             	test   rax,rax
 70e:	74 02                	je     712 <_init+0x12>
 710:	ff d0                	call   rax
 712:	48 83 c4 08          	add    rsp,0x8
 716:	c3                   	ret    

Disassembly of section .plt:

0000000000000720 <.plt>:
 720:	ff 35 62 08 20 00    	push   QWORD PTR [rip+0x200862]        # 200f88 <_GLOBAL_OFFSET_TABLE_+0x8>
 726:	ff 25 64 08 20 00    	jmp    QWORD PTR [rip+0x200864]        # 200f90 <_GLOBAL_OFFSET_TABLE_+0x10>
 72c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

Disassembly of section .plt.got:

0000000000000730 <.plt.got>:
 730:	ff 25 62 08 20 00    	jmp    QWORD PTR [rip+0x200862]        # 200f98 <_GLOBAL_OFFSET_TABLE_+0x18>
 736:	66 90                	xchg   ax,ax
 738:	ff 25 6a 08 20 00    	jmp    QWORD PTR [rip+0x20086a]        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x28>
 73e:	66 90                	xchg   ax,ax
 740:	ff 25 6a 08 20 00    	jmp    QWORD PTR [rip+0x20086a]        # 200fb0 <_GLOBAL_OFFSET_TABLE_+0x30>
 746:	66 90                	xchg   ax,ax
 748:	ff 25 6a 08 20 00    	jmp    QWORD PTR [rip+0x20086a]        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x38>
 74e:	66 90                	xchg   ax,ax
 750:	ff 25 72 08 20 00    	jmp    QWORD PTR [rip+0x200872]        # 200fc8 <_GLOBAL_OFFSET_TABLE_+0x48>
 756:	66 90                	xchg   ax,ax
 758:	ff 25 7a 08 20 00    	jmp    QWORD PTR [rip+0x20087a]        # 200fd8 <_GLOBAL_OFFSET_TABLE_+0x58>
 75e:	66 90                	xchg   ax,ax
 760:	ff 25 82 08 20 00    	jmp    QWORD PTR [rip+0x200882]        # 200fe8 <_GLOBAL_OFFSET_TABLE_+0x68>
 766:	66 90                	xchg   ax,ax
 768:	ff 25 8a 08 20 00    	jmp    QWORD PTR [rip+0x20088a]        # 200ff8 <_GLOBAL_OFFSET_TABLE_+0x78>
 76e:	66 90                	xchg   ax,ax

Disassembly of section .text:

0000000000000770 <_start>:
 770:	31 ed                	xor    ebp,ebp
 772:	49 89 d1             	mov    r9,rdx
 775:	5e                   	pop    rsi
 776:	48 89 e2             	mov    rdx,rsp
 779:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
 77d:	50                   	push   rax
 77e:	54                   	push   rsp
 77f:	4c 8d 05 3a 04 00 00 	lea    r8,[rip+0x43a]        # bc0 <__libc_csu_fini>
 786:	48 8d 0d c3 03 00 00 	lea    rcx,[rip+0x3c3]        # b50 <__libc_csu_init>
 78d:	48 8d 3d 8b 03 00 00 	lea    rdi,[rip+0x38b]        # b1f <main>
 794:	ff 15 26 08 20 00    	call   QWORD PTR [rip+0x200826]        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x40>
 79a:	f4                   	hlt    
 79b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000007a0 <deregister_tm_clones>:
 7a0:	48 8d 3d 81 08 21 00 	lea    rdi,[rip+0x210881]        # 211028 <__TMC_END__>
 7a7:	48 8d 05 81 08 21 00 	lea    rax,[rip+0x210881]        # 21102f <__TMC_END__+0x7>
 7ae:	55                   	push   rbp
 7af:	48 29 f8             	sub    rax,rdi
 7b2:	48 89 e5             	mov    rbp,rsp
 7b5:	48 83 f8 0e          	cmp    rax,0xe
 7b9:	76 15                	jbe    7d0 <deregister_tm_clones+0x30>
 7bb:	48 8b 05 de 07 20 00 	mov    rax,QWORD PTR [rip+0x2007de]        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x20>
 7c2:	48 85 c0             	test   rax,rax
 7c5:	74 09                	je     7d0 <deregister_tm_clones+0x30>
 7c7:	5d                   	pop    rbp
 7c8:	ff e0                	jmp    rax
 7ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
 7d0:	5d                   	pop    rbp
 7d1:	c3                   	ret    
 7d2:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 7d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 7dd:	00 00 00 

00000000000007e0 <register_tm_clones>:
 7e0:	48 8d 3d 41 08 21 00 	lea    rdi,[rip+0x210841]        # 211028 <__TMC_END__>
 7e7:	48 8d 35 3a 08 21 00 	lea    rsi,[rip+0x21083a]        # 211028 <__TMC_END__>
 7ee:	55                   	push   rbp
 7ef:	48 29 fe             	sub    rsi,rdi
 7f2:	48 89 e5             	mov    rbp,rsp
 7f5:	48 c1 fe 03          	sar    rsi,0x3
 7f9:	48 89 f0             	mov    rax,rsi
 7fc:	48 c1 e8 3f          	shr    rax,0x3f
 800:	48 01 c6             	add    rsi,rax
 803:	48 d1 fe             	sar    rsi,1
 806:	74 18                	je     820 <register_tm_clones+0x40>
 808:	48 8b 05 e1 07 20 00 	mov    rax,QWORD PTR [rip+0x2007e1]        # 200ff0 <_GLOBAL_OFFSET_TABLE_+0x70>
 80f:	48 85 c0             	test   rax,rax
 812:	74 0c                	je     820 <register_tm_clones+0x40>
 814:	5d                   	pop    rbp
 815:	ff e0                	jmp    rax
 817:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
 81e:	00 00 
 820:	5d                   	pop    rbp
 821:	c3                   	ret    
 822:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 826:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 82d:	00 00 00 

0000000000000830 <__do_global_dtors_aux>:
 830:	80 3d 11 08 21 00 00 	cmp    BYTE PTR [rip+0x210811],0x0        # 211048 <completed.7558>
 837:	75 27                	jne    860 <__do_global_dtors_aux+0x30>
 839:	48 83 3d b7 07 20 00 	cmp    QWORD PTR [rip+0x2007b7],0x0        # 200ff8 <_GLOBAL_OFFSET_TABLE_+0x78>
 840:	00 
 841:	55                   	push   rbp
 842:	48 89 e5             	mov    rbp,rsp
 845:	74 0c                	je     853 <__do_global_dtors_aux+0x23>
 847:	48 8b 3d ba 07 20 00 	mov    rdi,QWORD PTR [rip+0x2007ba]        # 201008 <__dso_handle>
 84e:	e8 15 ff ff ff       	call   768 <_init+0x68>
 853:	e8 48 ff ff ff       	call   7a0 <deregister_tm_clones>
 858:	5d                   	pop    rbp
 859:	c6 05 e8 07 21 00 01 	mov    BYTE PTR [rip+0x2107e8],0x1        # 211048 <completed.7558>
 860:	f3 c3                	repz ret 
 862:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 866:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 86d:	00 00 00 

0000000000000870 <frame_dummy>:
 870:	48 8d 3d 41 05 20 00 	lea    rdi,[rip+0x200541]        # 200db8 <__JCR_END__>
 877:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
 87b:	75 0b                	jne    888 <frame_dummy+0x18>
 87d:	e9 5e ff ff ff       	jmp    7e0 <register_tm_clones>
 882:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
 888:	48 8b 05 51 07 20 00 	mov    rax,QWORD PTR [rip+0x200751]        # 200fe0 <_GLOBAL_OFFSET_TABLE_+0x60>
 88f:	48 85 c0             	test   rax,rax
 892:	74 e9                	je     87d <frame_dummy+0xd>
 894:	55                   	push   rbp
 895:	48 89 e5             	mov    rbp,rsp
 898:	ff d0                	call   rax
 89a:	5d                   	pop    rbp
 89b:	e9 40 ff ff ff       	jmp    7e0 <register_tm_clones>

00000000000008a0 <TooSlow>:
 8a0:	55                   	push   rbp
 8a1:	48 89 e5             	mov    rbp,rsp
 8a4:	48 83 ec 10          	sub    rsp,0x10
 8a8:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 8ab:	48 8d 3d 22 03 00 00 	lea    rdi,[rip+0x322]        # bd4 <_IO_stdin_used+0x4>
 8b2:	e8 81 fe ff ff       	call   738 <_init+0x38>
 8b7:	bf 00 00 00 00       	mov    edi,0x0
 8bc:	e8 9f fe ff ff       	call   760 <_init+0x60>

00000000000008c1 <SubleqExecute>:
 8c1:	55                   	push   rbp
 8c2:	48 89 e5             	mov    rbp,rsp
 8c5:	53                   	push   rbx
 8c6:	48 83 ec 28          	sub    rsp,0x28
 8ca:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
 8ce:	89 f0                	mov    eax,esi
 8d0:	66 89 45 d4          	mov    WORD PTR [rbp-0x2c],ax
 8d4:	66 c7 45 e4 00 00    	mov    WORD PTR [rbp-0x1c],0x0
 8da:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
 8e1:	bf 05 00 00 00       	mov    edi,0x5
 8e6:	e8 5d fe ff ff       	call   748 <_init+0x48> # print or put
 8eb:	48 8d 35 ae ff ff ff 	lea    rsi,[rip+0xffffffffffffffae]        # 8a0 <TooSlow>
 8f2:	bf 0e 00 00 00       	mov    edi,0xe
 8f7:	e8 54 fe ff ff       	call   750 <_init+0x50>
 8fc:	81 7d ec 00 2d 31 01 	cmp    DWORD PTR [rbp-0x14],0x1312d00
 903:	76 11                	jbe    916 <SubleqExecute+0x55>
 905:	48 8d 3d d1 02 00 00 	lea    rdi,[rip+0x2d1]        # bdd <_IO_stdin_used+0xd>
 90c:	e8 27 fe ff ff       	call   738 <_init+0x38>
 911:	e9 02 02 00 00       	jmp    b18 <SubleqExecute+0x257>
 916:	0f b7 45 e4          	movzx  eax,WORD PTR [rbp-0x1c]
 91a:	66 3b 45 d4          	cmp    ax,WORD PTR [rbp-0x2c]
 91e:	76 11                	jbe    931 <SubleqExecute+0x70>
 920:	48 8d 3d b6 02 00 00 	lea    rdi,[rip+0x2b6]        # bdd <_IO_stdin_used+0xd>
 927:	e8 0c fe ff ff       	call   738 <_init+0x38>
 92c:	e9 e7 01 00 00       	jmp    b18 <SubleqExecute+0x257>
 931:	0f b7 45 e4          	movzx  eax,WORD PTR [rbp-0x1c]
 935:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 939:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 93d:	48 01 d0             	add    rax,rdx
 940:	0f b7 00             	movzx  eax,WORD PTR [rax]
 943:	66 89 45 e6          	mov    WORD PTR [rbp-0x1a],ax
 947:	0f b7 45 e4          	movzx  eax,WORD PTR [rbp-0x1c]
 94b:	48 83 c0 01          	add    rax,0x1
 94f:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 953:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 957:	48 01 d0             	add    rax,rdx
 95a:	0f b7 00             	movzx  eax,WORD PTR [rax]
 95d:	66 89 45 e8          	mov    WORD PTR [rbp-0x18],ax
 961:	0f b7 45 e4          	movzx  eax,WORD PTR [rbp-0x1c]
 965:	48 83 c0 02          	add    rax,0x2
 969:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 96d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 971:	48 01 d0             	add    rax,rdx
 974:	0f b7 00             	movzx  eax,WORD PTR [rax]
 977:	66 89 45 ea          	mov    WORD PTR [rbp-0x16],ax
 97b:	0f b7 45 ea          	movzx  eax,WORD PTR [rbp-0x16]
 97f:	66 3b 45 d4          	cmp    ax,WORD PTR [rbp-0x2c]
 983:	76 11                	jbe    996 <SubleqExecute+0xd5>
 985:	48 8d 3d 51 02 00 00 	lea    rdi,[rip+0x251]        # bdd <_IO_stdin_used+0xd>
 98c:	e8 a7 fd ff ff       	call   738 <_init+0x38>
 991:	e9 82 01 00 00       	jmp    b18 <SubleqExecute+0x257>
 996:	66 83 7d e6 ff       	cmp    WORD PTR [rbp-0x1a],0xffff
 99b:	75 18                	jne    9b5 <SubleqExecute+0xf4>
 99d:	66 83 7d e8 ff       	cmp    WORD PTR [rbp-0x18],0xffff
 9a2:	75 11                	jne    9b5 <SubleqExecute+0xf4>
 9a4:	48 8d 3d 37 02 00 00 	lea    rdi,[rip+0x237]        # be2 <_IO_stdin_used+0x12>
 9ab:	e8 88 fd ff ff       	call   738 <_init+0x38>
 9b0:	e9 63 01 00 00       	jmp    b18 <SubleqExecute+0x257>
 9b5:	66 83 7d e6 ff       	cmp    WORD PTR [rbp-0x1a],0xffff
 9ba:	75 76                	jne    a32 <SubleqExecute+0x171>
 9bc:	0f b7 45 e8          	movzx  eax,WORD PTR [rbp-0x18]
 9c0:	66 3b 45 d4          	cmp    ax,WORD PTR [rbp-0x2c]
 9c4:	76 11                	jbe    9d7 <SubleqExecute+0x116>
 9c6:	48 8d 3d 1e 02 00 00 	lea    rdi,[rip+0x21e]        # beb <_IO_stdin_used+0x1b>
 9cd:	e8 66 fd ff ff       	call   738 <_init+0x38>
 9d2:	e9 41 01 00 00       	jmp    b18 <SubleqExecute+0x257>
 9d7:	0f b7 45 e8          	movzx  eax,WORD PTR [rbp-0x18]
 9db:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 9df:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 9e3:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
 9e7:	48 8b 05 52 06 21 00 	mov    rax,QWORD PTR [rip+0x210652]        # 211040 <stdin@@GLIBC_2.2.5>
 9ee:	48 89 c7             	mov    rdi,rax
 9f1:	e8 4a fd ff ff       	call   740 <_init+0x40>
 9f6:	66 89 03             	mov    WORD PTR [rbx],ax
 9f9:	bf 05 00 00 00       	mov    edi,0x5
 9fe:	e8 45 fd ff ff       	call   748 <_init+0x48>
 a03:	0f b7 45 e8          	movzx  eax,WORD PTR [rbp-0x18]
 a07:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 a0b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 a0f:	48 01 d0             	add    rax,rdx
 a12:	0f b7 00             	movzx  eax,WORD PTR [rax]
 a15:	66 85 c0             	test   ax,ax
 a18:	7f 0a                	jg     a24 <SubleqExecute+0x163>
 a1a:	0f b7 45 ea          	movzx  eax,WORD PTR [rbp-0x16]
 a1e:	66 89 45 e4          	mov    WORD PTR [rbp-0x1c],ax
 a22:	eb 05                	jmp    a29 <SubleqExecute+0x168>
 a24:	66 83 45 e4 03       	add    WORD PTR [rbp-0x1c],0x3
 a29:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
 a2d:	e9 e1 00 00 00       	jmp    b13 <SubleqExecute+0x252>
 a32:	66 83 7d e8 ff       	cmp    WORD PTR [rbp-0x18],0xffff
 a37:	75 52                	jne    a8b <SubleqExecute+0x1ca>
 a39:	0f b7 45 e6          	movzx  eax,WORD PTR [rbp-0x1a]
 a3d:	66 3b 45 d4          	cmp    ax,WORD PTR [rbp-0x2c]
 a41:	76 11                	jbe    a54 <SubleqExecute+0x193>
 a43:	48 8d 3d a1 01 00 00 	lea    rdi,[rip+0x1a1]        # beb <_IO_stdin_used+0x1b>
 a4a:	e8 e9 fc ff ff       	call   738 <_init+0x38>
 a4f:	e9 c4 00 00 00       	jmp    b18 <SubleqExecute+0x257>
 a54:	0f b7 45 e6          	movzx  eax,WORD PTR [rbp-0x1a]
 a58:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 a5c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 a60:	48 01 d0             	add    rax,rdx
 a63:	0f b7 00             	movzx  eax,WORD PTR [rax]
 a66:	98                   	cwde   
 a67:	89 c7                	mov    edi,eax
 a69:	e8 c2 fc ff ff       	call   730 <_init+0x30>
 a6e:	48 8b 05 bb 05 21 00 	mov    rax,QWORD PTR [rip+0x2105bb]        # 211030 <stdout@@GLIBC_2.2.5>
 a75:	48 89 c7             	mov    rdi,rax
 a78:	e8 db fc ff ff       	call   758 <_init+0x58>
 a7d:	66 83 45 e4 03       	add    WORD PTR [rbp-0x1c],0x3
 a82:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
 a86:	e9 88 00 00 00       	jmp    b13 <SubleqExecute+0x252>
 a8b:	0f b7 45 e6          	movzx  eax,WORD PTR [rbp-0x1a]
 a8f:	66 3b 45 d4          	cmp    ax,WORD PTR [rbp-0x2c]
 a93:	77 0a                	ja     a9f <SubleqExecute+0x1de>
 a95:	0f b7 45 e8          	movzx  eax,WORD PTR [rbp-0x18]
 a99:	66 3b 45 d4          	cmp    ax,WORD PTR [rbp-0x2c]
 a9d:	76 0e                	jbe    aad <SubleqExecute+0x1ec>
 a9f:	48 8d 3d 45 01 00 00 	lea    rdi,[rip+0x145]        # beb <_IO_stdin_used+0x1b>
 aa6:	e8 8d fc ff ff       	call   738 <_init+0x38>
 aab:	eb 6b                	jmp    b18 <SubleqExecute+0x257>
 aad:	0f b7 45 e8          	movzx  eax,WORD PTR [rbp-0x18]
 ab1:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 ab5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 ab9:	48 01 d0             	add    rax,rdx
 abc:	0f b7 55 e8          	movzx  edx,WORD PTR [rbp-0x18]
 ac0:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
 ac4:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 ac8:	48 01 ca             	add    rdx,rcx
 acb:	0f b7 12             	movzx  edx,WORD PTR [rdx]
 ace:	89 d6                	mov    esi,edx
 ad0:	0f b7 55 e6          	movzx  edx,WORD PTR [rbp-0x1a]
 ad4:	48 8d 0c 12          	lea    rcx,[rdx+rdx*1]
 ad8:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
 adc:	48 01 ca             	add    rdx,rcx
 adf:	0f b7 12             	movzx  edx,WORD PTR [rdx]
 ae2:	29 d6                	sub    esi,edx
 ae4:	89 f2                	mov    edx,esi
 ae6:	66 89 10             	mov    WORD PTR [rax],dx
 ae9:	0f b7 45 e8          	movzx  eax,WORD PTR [rbp-0x18]
 aed:	48 8d 14 00          	lea    rdx,[rax+rax*1]
 af1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 af5:	48 01 d0             	add    rax,rdx
 af8:	0f b7 00             	movzx  eax,WORD PTR [rax]
 afb:	66 85 c0             	test   ax,ax
 afe:	7f 0a                	jg     b0a <SubleqExecute+0x249>
 b00:	0f b7 45 ea          	movzx  eax,WORD PTR [rbp-0x16]
 b04:	66 89 45 e4          	mov    WORD PTR [rbp-0x1c],ax
 b08:	eb 05                	jmp    b0f <SubleqExecute+0x24e>
 b0a:	66 83 45 e4 03       	add    WORD PTR [rbp-0x1c],0x3
 b0f:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
 b13:	e9 e4 fd ff ff       	jmp    8fc <SubleqExecute+0x3b>
 b18:	48 83 c4 28          	add    rsp,0x28
 b1c:	5b                   	pop    rbx
 b1d:	5d                   	pop    rbp
 b1e:	c3                   	ret    

0000000000000b1f <main>:
 b1f:	55                   	push   rbp
 b20:	48 89 e5             	mov    rbp,rsp
 b23:	48 83 ec 10          	sub    rsp,0x10
 b27:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 b2a:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
 b2e:	0f b7 05 eb 04 21 00 	movzx  eax,WORD PTR [rip+0x2104eb]        # 211020 <ProgLen>
 b35:	0f b7 c0             	movzx  eax,ax
 b38:	89 c6                	mov    esi,eax
 b3a:	48 8d 3d df 04 20 00 	lea    rdi,[rip+0x2004df]        # 201020 <PROG>
 b41:	e8 7b fd ff ff       	call   8c1 <SubleqExecute>
 b46:	bf 00 00 00 00       	mov    edi,0x0
 b4b:	e8 10 fc ff ff       	call   760 <_init+0x60>

0000000000000b50 <__libc_csu_init>:
 b50:	41 57                	push   r15
 b52:	41 56                	push   r14
 b54:	41 89 ff             	mov    r15d,edi
 b57:	41 55                	push   r13
 b59:	41 54                	push   r12
 b5b:	4c 8d 25 46 02 20 00 	lea    r12,[rip+0x200246]        # 200da8 <__frame_dummy_init_array_entry>
 b62:	55                   	push   rbp
 b63:	48 8d 2d 46 02 20 00 	lea    rbp,[rip+0x200246]        # 200db0 <__init_array_end>
 b6a:	53                   	push   rbx
 b6b:	49 89 f6             	mov    r14,rsi
 b6e:	49 89 d5             	mov    r13,rdx
 b71:	4c 29 e5             	sub    rbp,r12
 b74:	48 83 ec 08          	sub    rsp,0x8
 b78:	48 c1 fd 03          	sar    rbp,0x3
 b7c:	e8 7f fb ff ff       	call   700 <_init>
 b81:	48 85 ed             	test   rbp,rbp
 b84:	74 20                	je     ba6 <__libc_csu_init+0x56>
 b86:	31 db                	xor    ebx,ebx
 b88:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
 b8f:	00 
 b90:	4c 89 ea             	mov    rdx,r13
 b93:	4c 89 f6             	mov    rsi,r14
 b96:	44 89 ff             	mov    edi,r15d
 b99:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
 b9d:	48 83 c3 01          	add    rbx,0x1
 ba1:	48 39 dd             	cmp    rbp,rbx
 ba4:	75 ea                	jne    b90 <__libc_csu_init+0x40>
 ba6:	48 83 c4 08          	add    rsp,0x8
 baa:	5b                   	pop    rbx
 bab:	5d                   	pop    rbp
 bac:	41 5c                	pop    r12
 bae:	41 5d                	pop    r13
 bb0:	41 5e                	pop    r14
 bb2:	41 5f                	pop    r15
 bb4:	c3                   	ret    
 bb5:	90                   	nop
 bb6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
 bbd:	00 00 00 

0000000000000bc0 <__libc_csu_fini>:
 bc0:	f3 c3                	repz ret 

Disassembly of section .fini:

0000000000000bc4 <_fini>:
 bc4:	48 83 ec 08          	sub    rsp,0x8
 bc8:	48 83 c4 08          	add    rsp,0x8
 bcc:	c3                   	ret    
